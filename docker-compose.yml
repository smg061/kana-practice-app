version: "3.9"
services:
  app:
    container_name: golang_container
    environment:
      # - POSTGRES_USER=${DB_USER}
      # - POSTGRES_PASSWORD=${DB_PASSWORD}
      # - POSTGRES_DB=${DB_NAME}
      # - DATABASE_HOST=${DB_HOST}
      # - DATABASE_PORT=${DB_PORT}
      - POSTGRES_HOST_AUTH_METHOD=trust
      - ENV=production


    tty: true
    build: ./api/
    env_file:
      - ./api/.env.production
    ports:
      - 8000:8000
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - postgresdb
    networks:
      - learning
    

  pg:
    container_name: pg_container
    image: postgres:latest
    restart: always
    environment:
        POSTGRES_USER: postgres
        POSTGRES_HOST_AUTH_METHOD: trust
        PGUSER: postgres
    ports:
        - "5432:5432"
    volumes:
        - postgres_data:/var/lib/postgresql/data/
    networks:
      - learning

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:5.2
    restart: always
    environment:
        PGADMIN_DEFAULT_EMAIL: admin@example.com
        PGADMIN_DEFAULT_PASSWORD: admin123
        PGADMIN_LISTEN_PORT: 5433
        PGADMIN_CONFIG_SERVER_MODE: "False"
        PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
        PGADMIN_CONFIG_UPGRADE_CHECK_ENABLED: "False"
    volumes:
      - pgadmin_data:/root/.pgadmin
    ports:
        - "5433:5433"
    depends_on:
        - pg
    networks:
      - learning

# Networks to be created to facilitate communication between containers
networks:
  learning:
    driver: bridge
volumes:
  postgres_data:
  pgadmin_data:
